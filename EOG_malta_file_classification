% Step 1: Pick the first row, calculate the derivative and plot
first_row = nEOG(1, 4115:20000);
first_row_derivative = diff(first_row);

% Step 2: Pick the second row, calculate the derivative and plot as subplot
second_row = nEOG(2, 4115:20000);
second_row_derivative = diff(second_row);

% Step 3: Add the two derivatives
sum_of_derivatives = abs(first_row_derivative) + abs(second_row_derivative);

% Step 4: Create a 1 by column vector and assign values based on peaks
% Assuming we are working with the first row to detect peaks
signal = first_row;  % You can use either first_row or second_row here

% Find the peaks in the signal
[~, peak_locs] = findpeaks(signal);  % Get the indices of the peaks

% Initialize the new 1xN column vector where N is the length of the signal
new_vector = zeros(1, length(signal));

% Assign values 1, 2, 3 in a repeating pattern based on peaks
value_cycle = [1, 2, 3];  % Define the repeating pattern

% Iterate through the peak locations and assign values
current_value_index = 1;
for i = 1:length(peak_locs)-1
    % Assign the current value (1, 2, or 3) from the cycle to the timepoints between peaks
    new_vector(peak_locs(i):peak_locs(i+1)-1) = value_cycle(current_value_index);
    
    % Update the index in the cycle (wrap around to 1 after 3)
    current_value_index = mod(current_value_index, length(value_cycle)) + 1;
end

% Assign the last value from the cycle to the remaining timepoints
new_vector(peak_locs(end):end) = value_cycle(current_value_index);

% Step 5: Plot the results in subplots
figure;

% Plot the derivative of the first row
subplot(5, 1, 1);
plot(first_row_derivative);
title('Derivative of First Row');
xlabel('Index');
ylabel('Derivative');

% Plot the derivative of the second row
subplot(5, 1, 2);
plot(second_row_derivative);
title('Derivative of Second Row');
xlabel('Index');
ylabel('Derivative');

% Plot the sum of the two derivatives
subplot(5, 1, 3);
plot(sum_of_derivatives);
title('Sum of the Two Derivatives');
xlabel('Index');
ylabel('Sum of Derivatives');

% Plot the two actual signals one after the other
subplot(5, 1, 4);
plot(first_row);
hold on;
plot(second_row);
title('Original Signals (First and Second Rows)');
xlabel('Index');
ylabel('Signal');
legend('First Row', 'Second Row');
hold off;

% Step 6: Plot the new vector with peak-based classification and color assignment
subplot(5, 1, 5);
hold on;
% Define color map for values 1, 2, and 3
colors = [1 0 0; 0 1 0; 0 0 1];  % Red, Green, Blue

% Plot segments with different colors based on assigned values (1, 2, 3)
for i = 1:length(peak_locs)-1
    % Extract the segment from one peak to the next
    segment = peak_locs(i):peak_locs(i+1)-1;
    current_value = new_vector(peak_locs(i));  % Get the assigned value (1, 2, or 3)
    
    % Plot the segment in the corresponding color
    plot(segment, new_vector(segment), 'Color', colors(current_value, :), 'LineWidth', 2);
end

% Plot the last segment after the final peak
segment = peak_locs(end):length(new_vector);
current_value = new_vector(peak_locs(end));  % Get the assigned value for the last segment
plot(segment, new_vector(segment), 'Color', colors(current_value, :), 'LineWidth', 2);

title('New Vector with Peak-based Classification (1, 2, 3 Repeating)');
xlabel('Index');
ylabel('Assigned Value');
ylim([0 3.5])
hold off;
