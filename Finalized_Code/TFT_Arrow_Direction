#include <Adafruit_GFX.h>    // Core graphics library
#include <Adafruit_ST7735.h> // Hardware-specific library for ST7735
#include <SPI.h>

#define TFT_CS        39
#define TFT_RST       37
#define TFT_DC        38
#define TFT_BACKLIGHT  7

Adafruit_ST7735 tft = Adafruit_ST7735(TFT_CS, TFT_DC, TFT_RST);

void setup(void) {
  Serial.begin(230400);
  pinMode(TFT_BACKLIGHT, OUTPUT);
  digitalWrite(TFT_BACKLIGHT, HIGH); // Backlight on

  tft.initR(INITR_HALLOWING);
  tft.fillScreen(ST77XX_BLACK);

  Serial.println(F("TFT Initialized"));
}

void loop() {
  if (Serial.available() > 0) {
    // Read the incoming angle as a string
    
    String angleStr = Serial.readStringUntil('\n');  // Read until newline
    int angle = angleStr.toInt();  // Convert the angle string to an integer
    int angleR = ((angle+5)/10)*10;
    Serial.print("Angle : ");
    Serial.println(angleR);
    tft.fillScreen(ST77XX_BLACK); // Clear the screen

  // Determine direction and degree
  if (angleR >= 0 && angleR <= 180) {
  if (angleR == 90) {
    displayText("Looking Straight", ST77XX_WHITE);
  } else if (angleR >= 100 && angleR <= 180) {
    int LeftAngle = 90-angleR;
    displayTriangle("left", LeftAngle, ST77XX_BLUE);
  } else if (angleR >= 0 && angleR <= 80) {
    int RightAngle = angleR-90;
    displayTriangle("right", RightAngle, ST77XX_RED);
  } 

    delay(50); // Short delay for updates
  }
}
}

void displayText(const char *text, uint16_t color) {
  tft.setCursor(10, 30);
  tft.setTextColor(color);
  tft.setTextSize(2);
  tft.print(text);
}

void displayTriangle(const char *direction, int degree, uint16_t color) {
  int xCenter = tft.width() / 2;
  int yCenter = tft.height() / 2;

  if (strcmp(direction, "left") == 0) {
    // Draw left triangle
    tft.fillTriangle(xCenter - 20, yCenter, xCenter, yCenter - 15, xCenter, yCenter + 15, color);
  } else if (strcmp(direction, "right") == 0) {
    // Draw right triangle
    tft.fillTriangle(xCenter + 20, yCenter, xCenter, yCenter - 15, xCenter, yCenter + 15, color);
  }

  // Display degree value
  char degreeText[10];
  sprintf(degreeText, "%dÂ°", degree);
  tft.setCursor(10, yCenter + 30);
  tft.setTextColor(ST77XX_WHITE);
  tft.setTextSize(2);
  tft.print(degreeText);
}
